{"version":3,"sources":["webpack:////home/hammad/Projects/my-budget/src/app/add-budget/add-budget.component.ts","webpack:////home/hammad/Projects/my-budget/src/app/app.component.ts","webpack:////home/hammad/Projects/my-budget/src/app/budget-history/budget-history.component.ts","webpack:////home/hammad/Projects/my-budget/src/app/landing-page/landing-page.component.ts","webpack:////home/hammad/Projects/my-budget/src/app/shared/auth-guard.service.ts","webpack:////home/hammad/Projects/my-budget/src/app/today-budget/today-budget.component.ts","webpack:////home/hammad/Projects/my-budget/src async","webpack:////home/hammad/Projects/my-budget/src/main.ts","webpack:////home/hammad/Projects/my-budget/src/app/app.module.ts","webpack:////home/hammad/Projects/my-budget/src/app/app.routing.ts","webpack:////home/hammad/Projects/my-budget/src/app/index.ts","webpack:////home/hammad/Projects/my-budget/src/app/shared/form.validators.ts","webpack:////home/hammad/Projects/my-budget/src/app/shared/iteratableObject.pipe.ts","webpack:////home/hammad/Projects/my-budget/src/environments/environment.ts","webpack:////home/hammad/Projects/my-budget/src/polyfills.ts","webpack:////home/hammad/Projects/my-budget/src/app/add-budget/add-budget.component.css","webpack:////home/hammad/Projects/my-budget/src/app/app.component.css","webpack:////home/hammad/Projects/my-budget/src/app/budget-history/budget-history.component.css","webpack:////home/hammad/Projects/my-budget/src/app/landing-page/landing-page.component.css","webpack:////home/hammad/Projects/my-budget/src/app/today-budget/today-budget.component.css","webpack:////home/hammad/Projects/my-budget/src/app/add-budget/add-budget.component.html","webpack:////home/hammad/Projects/my-budget/src/app/app.component.html","webpack:////home/hammad/Projects/my-budget/src/app/budget-history/budget-history.component.html","webpack:////home/hammad/Projects/my-budget/src/app/landing-page/landing-page.component.html","webpack:////home/hammad/Projects/my-budget/src/app/today-budget/today-budget.component.html","webpack:////home/hammad/Projects/my-budget/src/app/shared/main.service.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { itemNameValidator, amountValidator  } from '../shared/form.validators';\nimport { MainService } from '../shared/main.service';\n\n@Component({\n  selector: 'app-add-budget',\n  templateUrl: './add-budget.component.html',\n  styleUrls: ['./add-budget.component.css']\n})\nexport class AddBudgetComponent implements OnInit {\n\n  currentMonth: string;\n  placeholderText: string;\n  spendPerDay: number;\n  currentDate: Date;\n  username: ActivatedRoute;\n  oldIncome: any = '';\n  btnLabel: string = 'Add';\n  editFlag: boolean;\n  myForm: FormGroup;\n  dataRecieved: boolean = false;\n  constructor(fb: FormBuilder, private route: ActivatedRoute, private mainService: MainService) {\n    this.myForm = fb.group({\n          'income': ['', Validators.compose([Validators.required])],\n          'saving': '',\n      });\n    // setValue: set values of all property\n    // patchValue: change values of specific property\n    this.myForm.patchValue({saving: 0});\n  }\n\n  ngOnInit() {\n      let { params } = this.route.snapshot;\n      params['username'] === 'edit' && (this.editFlag = true, this.getIncome());\n      this.username = params['username'] !== 'edit' ?\n      params['username'] : localStorage['username'];\n      this.placeholderText = 'Your total income of ' + this.getCurrentMonth();\n      this.dataRecieved = false;\n  }\n\n  getIncome() {\n    this.mainService.getIncome()\n    .then((res) => {\n      this.dataRecieved = true;\n      console.log('old income: ', res);\n      this.oldIncome = res;\n    }, (err) => {\n      this.dataRecieved = true;\n      console.log(err);\n    });\n  }\n\n  totalIncome(form) {\n    console.log('total Income: ', form);\n    form.saving === '' && (form.saving = 0);\n    this.mainService.calculateBudget(this.username, form.income, form.saving);\n    this.dataRecieved = true;\n  }\n\n  editIncome(form) {\n      form.saving === '' && (form.saving = 0);\n      this.mainService.editIncome(this.username, form.income, form.saving, this.oldIncome);\n      this.dataRecieved = true;\n  }\n\n  cancelEdit() {\n    this.mainService.cancelEdit();\n  }\n\n  getCurrentMonth() {\n    const date = new Date();\n    const monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n      'July', 'August', 'September', 'October', 'November', 'December'\n    ];\n    return monthNames[date.getMonth()];\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/add-budget/add-budget.component.ts","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app works!';\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/app.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { MainService } from '../shared/main.service';\n\n@Component({\n  selector: 'app-budget-history',\n  templateUrl: './budget-history.component.html',\n  styleUrls: ['./budget-history.component.css']\n})\nexport class BudgetHistoryComponent implements OnInit {\n\n  history: Object;\n  monthKeys: Array<string>;\n  dataRecieved: boolean;\n  message: any;\n  dayKeys: Array<any>;\n  count: number;\n  toggle: boolean;\n  constructor(private mainService: MainService) {\n    this.count = 0;\n    this.toggle = false;\n    this.dataRecieved = false;\n  }\n\n  ngOnInit() {\n    this.getHistory();\n  }\n\n  getHistory() {\n    this.mainService.getHistory()\n      .then((snapshot) => {\n        if (!snapshot.val()) {\n          throw new Error('No history available yet.');\n        }else {\n          this.history = snapshot.val();\n          console.log('history obj : ', this.history);\n          this.dataRecieved = true;\n        }\n      })\n      .catch((err) => {\n        this.message = err;\n        this.dataRecieved = true;\n        console.log('error:', err);\n      });\n  }\n\n  toggleMe(id) {\n    if (this.count % 2 === 0) {\n      this.toggle = id;\n    }else {\n      this.toggle = id;\n    }\n    this.count++;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/budget-history/budget-history.component.ts","import { Component, OnInit } from '@angular/core';\n\nimport { MainService } from '../shared/main.service';\n\n@Component({\n  selector: 'app-landing-page',\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent implements OnInit {\n\n\n  constructor(private mainService: MainService) {}\n\n  ngOnInit() {\n    this.mainService.isLoggedIn();\n  }\n\n  getStarted(username) {\n    this.mainService.getStarted(username);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/landing-page/landing-page.component.ts","import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { MainService } from './main.service';\n\n@Injectable()\nexport class CanActivateViaAuthGuard implements CanActivate {\n\n  constructor(private mainService: MainService) {}\n\n  canActivate() {\n    return this.mainService.isLoggedIn();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/shared/auth-guard.service.ts","import { Component, OnInit, AfterViewInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { MainService } from '../shared/main.service';\nimport { itemNameValidator, amountValidator  } from '../shared/form.validators';\n\n@Component({\n  selector: 'app-today-budget',\n  templateUrl: './today-budget.component.html',\n  styleUrls: ['./today-budget.component.css']\n})\nexport class TodayBudgetComponent implements OnInit, AfterViewInit {\n  budgetInfo = {income: '', budget: '', spend: '', update: ''};\n  budgetRef: string;\n  message: any = '';\n  days: Object;\n  dataRecieved: boolean = false;\n  categories: Array<String> = ['Travel', 'Food', 'Medical', 'Other']; ;\n  myForm: FormGroup;\n  units: Array<string> = ['kg', 'dozen', 'item', 'other'];\n  counter: number = 0;\n  constructor(fb: FormBuilder, private route: ActivatedRoute, private mainService: MainService) {\n      this.myForm = fb.group({\n          'quantity' : [''],\n          'unit' : [''],\n          'category' : ['', Validators.required],\n          'itemName' : ['', Validators.compose([Validators.required, itemNameValidator])],\n          'amount': ['', Validators.compose([Validators.required, amountValidator])],\n      });\n\n   }\n\n  ngOnInit() {\n    let { budgetRef } = this.route.snapshot.params;\n    this.days = this.mainService.leftDays();\n    this.budgetRef = budgetRef !== 'back' ? budgetRef : localStorage['budgetRef'] ;\n  }\n\n  ngAfterViewInit() {\n  }\n\n  getBudgetInfo() {\n    // if (this.counter >= 1) { return; }else {\n      this.mainService.moneyToSpend(this.budgetRef)\n      .then( snapshot => {\n        console.log('snap : ', snapshot.val());\n        let {totalIncome, totalBudget, spendPerDay, totalSaving, updatedBudget} = snapshot.val();\n        this.budgetInfo = Object.assign({}, this.budgetInfo, {\n          income: totalIncome, budget: totalBudget, saving: totalSaving, spend: spendPerDay, update: updatedBudget\n        });\n        this.dataRecieved = true;\n        // this.counter++;\n      })\n      .catch (err => console.log('err from budget : ', err));\n      // }\n\n  }\n\n  budgetCheck() {\n    return this.budgetInfo.update === '' ? this.budgetInfo.budget : this.budgetInfo.update;\n  }\n\n  totalSpended(data) {\n    data = data.value;\n    if (data.amount > this.budgetCheck()) {return false; };\n    console.log('todaySpended: ', data);\n    data.quantity && (data.quantity = data.quantity + ' ' + data.unit);\n    this.dataRecieved = false;\n    this.mainService.todaySpended(this.budgetRef, data.category, data.itemName, data.amount, data.quantity)\n    .then(\n      (res) => {\n        console.log('today: ', res);\n        this.myForm.reset();\n        this.dataRecieved = true;\n        this.message = 'Item successfully added';\n        setTimeout(() => {\n            this.message = '';\n        }, 4000);\n        this.updateBudget(data.amount);\n      },\n      (err) => {\n        console.log('today: ', err);\n        this.dataRecieved = true;\n        this.message = err || 'Sorry! some problem occured while adding the item, please try again' ;\n        setTimeout(() => {\n            this.message = '';\n        }, 4000);\n      });\n  }\n\n  // update spend per day amount after adding info of item \n  updateBudget(todaySpended) {\n    let { budget, update }: any = this.budgetInfo;\n    let updatedBudget = update === '' ? (budget - todaySpended) : (update - todaySpended);\n    this.mainService.updatedBudget(this.budgetRef, updatedBudget);\n    this.getBudgetInfo();\n  }\n\n  logout() {\n    this.mainService.logout();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/today-budget/today-budget.component.ts","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 432;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src async\n// module id = 432\n// module chunks = 0","import './polyfills.ts';\n\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\nimport { enableProdMode } from '@angular/core';\nimport { environment } from './environments/environment';\nimport { AppModule } from './app/';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/main.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { MaterialModule } from '@angular/material';\nimport { routing, appRoutingProviders }  from './app.routing';\nimport { CanActivateViaAuthGuard } from './shared/auth-guard.service';\n\nimport { IteratableObjectPipe } from './shared/iteratableObject.pipe';\nimport { MainService } from './shared/main.service';\nimport { AppComponent } from './app.component';\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { AddBudgetComponent } from './add-budget/add-budget.component';\nimport { TodayBudgetComponent } from './today-budget/today-budget.component';\nimport { BudgetHistoryComponent } from './budget-history/budget-history.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LandingPageComponent,\n    AddBudgetComponent,\n    TodayBudgetComponent,\n    BudgetHistoryComponent,\n    IteratableObjectPipe\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpModule,\n    routing,\n    MaterialModule.forRoot(),\n  ],\n  providers: [ appRoutingProviders, MainService, CanActivateViaAuthGuard],\n  bootstrap: [ AppComponent ]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/app.module.ts","import { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LandingPageComponent } from './landing-page/landing-page.component';\nimport { AddBudgetComponent } from './add-budget/add-budget.component';\nimport { TodayBudgetComponent } from './today-budget/today-budget.component';\nimport { BudgetHistoryComponent } from './budget-history/budget-history.component';\nimport { CanActivateViaAuthGuard } from './shared/auth-guard.service';\n\nconst appRoutes: Routes = [\n   { path: 'add-budget/:username', component: AddBudgetComponent },\n   { path: 'today-budget/:budgetRef', component: TodayBudgetComponent },\n   { path: 'budget-history', component: BudgetHistoryComponent },\n   { path: '', component: LandingPageComponent, canActivate: [CanActivateViaAuthGuard], },\n   { path: 'my-budget', component: LandingPageComponent, canActivate: [CanActivateViaAuthGuard], },\n];\n\nexport const appRoutingProviders: any[] = [\n\n];\n\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/app.routing.ts","export * from './app.component';\nexport * from './app.module';\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/index.ts","import { FormControl } from '@angular/forms';\n\nfunction itemNameValidator(control: FormControl): {[s: string]: boolean} {\n    if (control.value && !control.value.match(/[A-Z | a-z]/g)) {\n        return {invaliditemName: true};\n    }\n}\n\nfunction amountValidator(control: FormControl): {[s: string]: boolean} {\n    if (control.value && !control.value.match(/[0-9]/g)) {\n        return {invalidAmount: true};\n    }\n}\n\nexport { itemNameValidator, amountValidator };\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/shared/form.validators.ts","import { Pipe, PipeTransform } from '@angular/core';\n/*\n * Raise the value exponentially\n * Takes an exponent argument that defaults to 1.\n * Usage:\n *   value | exponentialStrength:exponent\n * Example:\n *   {{ 2 |  exponentialStrength:10}}\n *   formats to: 1024\n*/\n@Pipe({name: 'iterateObject'})\nexport class IteratableObjectPipe implements PipeTransform {\n  transform(value: any, args?: any[]): Object[] {\n        let keyArr: any[] = Object.keys(value),\n            dataArr = [],\n            keyName = args[0];\n\n        keyArr.forEach((key: any) => {\n            value[key][keyName] = key;\n            dataArr.push(value[key]);\n        });\n\n        if (args[1]) {\n            dataArr.sort((a: Object, b: Object): number => {\n                return a[keyName] > b[keyName] ? 1 : -1;\n            });\n        }\n\n        return dataArr;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/shared/iteratableObject.pipe.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/environments/environment.ts","// This file includes polyfills needed by Angular 2 and is loaded before\n// the app. You can add your own extra polyfills to this file.\nimport 'core-js/es6/symbol';\nimport 'core-js/es6/object';\nimport 'core-js/es6/function';\nimport 'core-js/es6/parse-int';\nimport 'core-js/es6/parse-float';\nimport 'core-js/es6/number';\nimport 'core-js/es6/math';\nimport 'core-js/es6/string';\nimport 'core-js/es6/date';\nimport 'core-js/es6/array';\nimport 'core-js/es6/regexp';\nimport 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport 'core-js/es6/reflect';\n\nimport 'core-js/es7/reflect';\nimport 'zone.js/dist/zone';\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/polyfills.ts","module.exports = \".budget-input{\\n    width: 90%;\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src/app/add-budget/add-budget.component.css\n// module id = 749\n// module chunks = 0","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src/app/app.component.css\n// module id = 750\n// module chunks = 0","module.exports = \".historyTable{\\n    width: 100%;\\n    padding: 20px;\\n    \\n}\\n\\n.tRow{\\n    padding: 20px;\\n    border: 1px solid lightslategray;\\n}\\n\\n.saving{\\n\\tfloat: right;\\n\\tfont-weight: normal;\\n\\tfont-size: 16px;\\n}\\n\\n.historyCard{\\n\\toverflow: auto;\\n\\tmax-height:400px;\\n}\\n\\n.monthText{\\n\\ttext-align:left;\\n}\\n\\n.mainCard{\\n\\tmargin-top: 4vh;\\n}\\n\\n.spinner{\\n\\tmargin-left:44%;\\n\\tmargin-top:5vh\\n}\\n\\n.backBtn{\\n\\ttext-align: left\\n}\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src/app/budget-history/budget-history.component.css\n// module id = 751\n// module chunks = 0","module.exports = \".username-input{\\n    padding: 10px;\\n    width: 90%;\\n}\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src/app/landing-page/landing-page.component.css\n// module id = 752\n// module chunks = 0","module.exports = \".budget-input{\\n    width: 96%;\\n}\\n\\n.amount{\\n    font-weight: 20px;\\n    color: slateblue\\n}\\n\\n.mainCard{\\n    margin-top: 10px;\\n}\\n\\n.btn{\\n    margin: 2px;\\n}\\n\\n.example-fill-remaining-space {\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 1 auto;\\n          flex: 1 1 auto;\\n}\\n\\n.selectBox{\\n    width: 96%;\\n    margin: 15px 0 15px 0;\\n    padding: 5px;\\n    border-radius: 2px;\\n    background: #FFFAD3;\\n}\\n\\ntable{\\n    width: 98%;\\n    margin-left: 0.8%;\\n}\\n\\n@media \\nonly screen and (max-width: 760px),\\n(min-device-width: 768px) and (max-device-width: 1024px)  {\\n\\ntable{\\n    width: 100%;\\n    margin: 0 auto;\\n}\\n\\t\\n}\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src/app/today-budget/today-budget.component.css\n// module id = 753\n// module chunks = 0","module.exports = \"<md-toolbar class=\\\"toolbar\\\">\\n  <span><img class=\\\"logoImg\\\" src=\\\"../../images/wallet2.png\\\" alt=\\\"\\\"></span>\\n  <span style=\\\"font-family:cursive;\\\">My Budget</span>\\n</md-toolbar>\\n<md-progress-bar *ngIf=\\\"editFlag && !dataRecieved\\\" mode=\\\"indeterminate\\\" color=\\\"warn\\\"></md-progress-bar>\\n\\n<div class=\\\"main\\\">\\n\\n  <md-card style=\\\"margin-top: 20vh;\\\">\\n    <md-card-content>\\n          \\n          <form *ngIf=\\\"!editFlag\\\" [formGroup]=\\\"myForm\\\"  (ngSubmit)=\\\"totalIncome(myForm.value);\\\">\\n            <div>\\n              <md-input class=\\\"budget-input\\\" [placeholder]=\\\"placeholderText\\\" type=\\\"text\\\" formControlName=\\\"income\\\" [class.error]=\\\"myForm.controls['income'].touched\\\">\\n                <span md-suffix>&nbsp;Rs</span>\\n              </md-input>\\n              <md-input class=\\\"budget-input\\\" placeholder=\\\"Amount you want to save(optional)\\\" type=\\\"text\\\" formControlName=\\\"saving\\\" [class.error]=\\\"myForm.controls['saving'].touched\\\">\\n                <span md-suffix>&nbsp;Rs</span>\\n              </md-input>\\n              <div class=\\\"err\\\" *ngIf=\\\"myForm.controls['saving'].value > myForm.controls['income'].value\\\">you can't save more than provided income</div>\\n              <div class=\\\"err\\\" *ngIf=\\\"myForm.controls['income'].hasError('required') && myForm.controls['income'].touched\\\">income is required</div>\\n              <div class=\\\"err\\\" *ngIf=\\\"myForm.controls['saving'].hasError('required') && myForm.controls['saving'].touched\\\">saving is required</div>\\n            </div>\\n            <div *ngIf=\\\"!myForm.valid && myForm.dirty\\\" class=\\\"err\\\">Some form field values are invalid</div>\\n            <button md-raised-button color=\\\"warn\\\" type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Submit</button>\\n          </form>\\n\\n          <form *ngIf=\\\"editFlag\\\" [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"editIncome(myForm.value);\\\">\\n            <div>\\n              <md-input [value]=\\\"oldIncome.totalIncome\\\" class=\\\"budget-input\\\" [placeholder]=\\\"placeholderText\\\" type=\\\"text\\\" formControlName=\\\"income\\\" [class.error]=\\\"myForm.controls['income'].touched\\\">\\n                <span md-suffix>&nbsp;Rs</span>\\n              </md-input>\\n              <md-input [value]=\\\"oldIncome.totalSaving\\\" class=\\\"budget-input\\\" placeholder=\\\"Amount you want to save(optional)\\\" type=\\\"text\\\" formControlName=\\\"saving\\\" >\\n                <span md-suffix>&nbsp;Rs</span>\\n              </md-input>\\n              <div class=\\\"err\\\" *ngIf=\\\"myForm.controls['saving'].value > myForm.controls['income'].value\\\">you can't save more than provided income</div>\\n              <div class=\\\"err\\\" *ngIf=\\\"myForm.controls['income'].hasError('required') && myForm.controls['income'].touched\\\">income is required</div>\\n              <!--<div class=\\\"err\\\" *ngIf=\\\"myForm.controls['saving'].hasError('required') && myForm.controls['saving'].touched\\\">saving is required</div>-->\\n            </div>\\n            <div *ngIf=\\\"!myForm.valid && myForm.dirty\\\" class=\\\"err\\\">Some form field values are invalid</div>\\n            <div>\\n              <button md-raised-button color=\\\"warn\\\" type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Save</button>\\n              <button md-raised-button color=\\\"warn\\\" type=\\\"button\\\" (click)=\\\"cancelEdit();\\\">Cancel</button>  \\n            </div>\\n          </form>\\n    </md-card-content>\\n  </md-card>\\n\\n</div>\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src/app/add-budget/add-budget.component.html\n// module id = 754\n// module chunks = 0","module.exports = \"<div>\\n  <router-outlet></router-outlet>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src/app/app.component.html\n// module id = 755\n// module chunks = 0","module.exports = \"<md-toolbar class=\\\"toolbar\\\">\\n  <span><img class=\\\"logoImg\\\" src=\\\"../../images/wallet2.png\\\" alt=\\\"logo\\\"></span>\\n  <span style=\\\"font-family:cursive;\\\">My Budget</span>\\n</md-toolbar>\\n<md-progress-bar *ngIf=\\\"!dataRecieved\\\" mode=\\\"indeterminate\\\" color=\\\"warn\\\"></md-progress-bar>\\n\\n<div class=\\\"main\\\">\\n  \\n  <div class=\\\"backBtn\\\">\\n    <button flex md-raised-button color=\\\"warn\\\" routerLink='/today-budget/back'>Back</button>\\n  </div>\\n  <!--<div class=\\\"spinner\\\" *ngIf=\\\"!dataRecieved\\\"><md-spinner color=\\\"warn\\\"></md-spinner></div>-->\\n  <div *ngIf=\\\"dataRecieved\\\" #modal>\\n    <md-card class=\\\"mainCard\\\" *ngFor='let month of history | iterateObject:\\\"key\\\":true; let id=index' >\\n      <p class=\\\"display-2\\\" *ngIf=\\\"!month.Days\\\">{{message || \\\"Currently no history available to show\\\"}} </p>\\n      <md-card-content class=\\\"historyCard\\\" *ngIf=\\\"month.Days\\\" layout=\\\"row\\\" >\\n          <h3 (click)=\\\"toggleMe(id)\\\" class=\\\"monthText\\\">{{month.k}} <span class=\\\"saving\\\">saved: {{month.updatedBudget}} Rs</span></h3>\\n          <table *ngIf=\\\"toggle == id\\\" class=\\\"historyTable\\\" layout=\\\"row\\\" flex>\\n            <tr>\\n              <th class=\\\"tRow\\\">Day</th>\\n              <th class=\\\"tRow\\\">Category</th>\\n              <th class=\\\"tRow\\\">Item</th>\\n              <th class=\\\"tRow\\\">Quantity</th>\\n              <th class=\\\"tRow\\\">Amount</th>\\n            </tr>\\n            <tr *ngFor=\\\"let item of month.Days | iterateObject:'key':true\\\">\\n              <td class=\\\"tRow\\\">{{item.k | date:\\\"shortDate\\\"}} {{item.k | date:\\\"HH:mm\\\"}}</td>\\n              <td class=\\\"tRow\\\">{{item.category}}</td>\\n              <td class=\\\"tRow\\\">{{item.item}}</td>\\n              <td class=\\\"tRow\\\">{{item.quantity || \\\"not defined\\\"}}</td>\\n              <td class=\\\"tRow\\\">{{item.money}}</td>\\n            </tr>\\n          </table>\\n      </md-card-content>\\n    </md-card>\\n  </div>\\n  \\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src/app/budget-history/budget-history.component.html\n// module id = 756\n// module chunks = 0","module.exports = \"<md-toolbar class=\\\"toolbar\\\">\\n  <span><img class=\\\"logoImg\\\" src=\\\"../../images/wallet2.png\\\" alt=\\\"\\\"></span>\\n  <span style=\\\"font-family:cursive;\\\">My Budget</span>\\n</md-toolbar>\\n\\n<div layout=\\\"row\\\" layout-padding layout-margin layout-fill style=\\\"min-height: 224px; margin-top: 20vh;\\\">\\n  <md-card flex>\\n    <md-card-header>\\n        <md-card-title>Manage your monthly budget easily</md-card-title>\\n    </md-card-header>\\n    <md-card-content>\\n          <md-input class=\\\"username-input\\\" type=\\\"text\\\" name=\\\"username\\\" #username (keyup.enter)=\\\"getStarted(username.value)\\\" placeholder=\\\"Enter your name\\\">\\n          </md-input>\\n          <button md-raised-button color=\\\"warn\\\" *ngIf=\\\"username.value !== ''\\\" (click)=\\\"getStarted(username.value)\\\">Get Started</button>\\n    </md-card-content>\\n  </md-card>\\n  \\n</div>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src/app/landing-page/landing-page.component.html\n// module id = 757\n// module chunks = 0","module.exports = \"<md-toolbar class=\\\"toolbar\\\">\\n  <span><img class=\\\"logoImg\\\" src=\\\"../../images/wallet2.png\\\" alt=\\\"\\\"></span>\\n  <span style=\\\"font-family:cursive;\\\">My Budget</span>\\n  <!-- This fills the remaining space of the current row -->\\n  <span class=\\\"example-fill-remaining-space\\\"></span>\\n\\n  <span><button flex=\\\"auto\\\" md-raised-button color=\\\"warn\\\" (click)=\\\"logout()\\\">Logout</button></span>\\n</md-toolbar>\\n<md-progress-bar *ngIf=\\\"!dataRecieved\\\" mode=\\\"indeterminate\\\" color=\\\"warn\\\"></md-progress-bar>\\n\\n\\n<div layout=\\\"row\\\" style=\\\"margin-top: 4vh;\\\">\\n  <div layout=\\\"row\\\">\\n    <button flex=\\\"auto\\\" md-raised-button color=\\\"warn\\\" class=\\\"btn\\\" routerLink='/add-budget/edit'>Update Budget</button>\\n    <button flex=\\\"auto\\\" md-raised-button color=\\\"warn\\\" class=\\\"btn\\\" routerLink='/budget-history'>Budget History</button>\\n  </div>\\n  {{getBudgetInfo() | async}}\\n  <md-card layout=\\\"row\\\" style=\\\"margin-top: 4vh; margin:4vh 10px 0 10px;\\\" layout-align=\\\"center center\\\">\\n    <!--<div style=\\\"margin-left:40%\\\" *ngIf=\\\"!dataRecieved\\\"><md-spinner color=\\\"warn\\\"></md-spinner></div>-->\\n    <md-card-content *ngIf=\\\"dataRecieved\\\">\\n      <p align='right'>{{days}} days left</p>\\n      <p></p>\\n      <p class=\\\"md-body-2\\\">Total Budget: <span class=\\\"amount\\\">{{budgetInfo.budget}} Rs</span></p>\\n      <p class=\\\"md-body-2\\\" *ngIf=\\\"budgetInfo.update != '' \\\">Total Budget Left: <span style=\\\"color:red\\\">{{budgetInfo.update}} Rs</span></p>\\n      <h3 class=\\\"md-display-2\\\">Amount you can spend per day: <span style=\\\"color:green\\\">{{budgetInfo.spend}} Rs</span></h3>\\n      <p class=\\\"md-body-2\\\" style=\\\"color:green;margin:3px;\\\">{{message}}</p>\\n      <form [formGroup]=\\\"myForm\\\" (ngSubmit)=\\\"totalSpended(myForm);\\\">\\n          <div>\\n            <select class=\\\"selectBox\\\" [formControl]=\\\"myForm.controls['category']\\\">\\n              <option selected disabled>Choose category</option>\\n              <option *ngFor=\\\"let category of categories;\\\" [value]=\\\"category\\\">\\n                {{category}}\\n              </option>\\n            </select>  \\n          </div>\\n          <div>\\n            <md-input class=\\\"budget-input\\\" [formControl]=\\\"myForm.controls['itemName']\\\" [class.error]=\\\"myForm.controls['itemName'].touched && myForm.controls['itemName'].hasError('invaliditemName')\\\" type=\\\"text\\\" placeholder=\\\"Item Name\\\">\\n            </md-input>\\n            <div class=\\\"err\\\" *ngIf=\\\"myForm.controls['itemName'].hasError('required') && myForm.controls['itemName'].touched\\\">item name is required</div>\\n            <div class=\\\"err\\\" *ngIf=\\\"myForm.controls['itemName'].hasError('invaliditemName') && myForm.controls['itemName'].dirty\\\">item name should be a text value</div>  \\n          </div>\\n          <table cellspacing=\\\"0\\\">\\n            <tr>\\n              <td>\\n                <md-input class=\\\"budget-input\\\" [formControl]=\\\"myForm.controls['quantity']\\\" type=\\\"number\\\" placeholder=\\\"Quantity (optional)\\\"></md-input>\\n              </td>\\n              <td>\\n                <select class=\\\"selectBox\\\" [formControl]=\\\"myForm.controls['unit']\\\">\\n                  <option selected disabled>Choose unit</option>\\n                  <option *ngFor=\\\"let unit of units;\\\" [value]=\\\"unit\\\">\\n                    {{unit}}\\n                  </option>\\n                </select>\\n              </td>\\n            </tr>\\n          </table>\\n          <div>\\n            <md-input class=\\\"budget-input\\\" [formControl]=\\\"myForm.controls['amount']\\\" [class.error]=\\\"myForm.controls['amount'].touched && myForm.controls['amount'].hasError('invalidAmount')\\\" type=\\\"text\\\" placeholder=\\\"Amount\\\">\\n              <span md-suffix>&nbsp;Rs</span>\\n            </md-input>\\n            <div class=\\\"err\\\" *ngIf=\\\"myForm.controls['amount'].value > budgetCheck()\\\">you are out of your budget for this amount, please update your budget</div>\\n            <div class=\\\"err\\\" *ngIf=\\\"myForm.controls['amount'].hasError('required') && myForm.controls['amount'].touched\\\">amount is required</div>\\n            <div class=\\\"err\\\" *ngIf=\\\"myForm.controls['amount'].hasError('invalidAmount') && myForm.controls['amount'].dirty\\\">amount should be a numeric value</div>\\n          </div>\\n          <div *ngIf=\\\"!myForm.valid && myForm.dirty\\\" class=\\\"err\\\">Some form field values are invalid</div>\\n          <button md-raised-button color=\\\"warn\\\" type=\\\"submit\\\" [disabled]=\\\"!myForm.valid\\\">Submit</button>\\n      </form>\\n    </md-card-content>\\n  </md-card>\\n\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/hammad/Projects/my-budget/src/app/today-budget/today-budget.component.html\n// module id = 758\n// module chunks = 0","import { Injectable } from '@angular/core';\nimport { Router } from '@angular/router';\nimport * as firebase from 'firebase';\nimport 'rxjs/add/operator/map';\nimport { Observable } from 'rxjs/Observable';\n\n\n// Must export the config\nexport const firebaseConfig = {\n  apiKey: 'AIzaSyAZB2a7SEmbQQd4r236nQNrRtiBnuhF5hk',\n  authDomain: 'todo-list-8f989.firebaseapp.com',\n  databaseURL: 'https://todo-list-8f989.firebaseio.com',\n  storageBucket: 'todo-list-8f989.appspot.com'\n};\n\nfirebase.initializeApp(firebaseConfig);\nexport const database = firebase.database();\n\nconst monthNames = ['January', 'February', 'March', 'April', 'May', 'June',\n  'July', 'August', 'September', 'October', 'November', 'December'\n];\n\n@Injectable()\nexport class MainService {\n  budgetHistory: any;\n  spendMoneyData: Observable<Object>;\n  constructor(private router: Router) {}\n\n  getStarted(username) {\n      let vm = this;\n      database.ref('users/' + username).once('value', (snapshot) => {\n          const data = snapshot.val();\n          if (data) {\n            let budgetRef = 'budgetHistory/' + username + '' + this.currentYear + '/' + this.currentMonth;\n            let budgetRefYearly = 'budgetHistory/' + username + '' + this.currentYear;\n            window.localStorage['username'] = username;\n            window.localStorage['budgetRef'] = budgetRef;\n            window.localStorage['budgetRefYearly'] = budgetRefYearly;\n            vm.router.navigate(['/today-budget', budgetRef]);\n          }else {\n            database.ref('users/' + username).set({\n              username: username,\n            });\n            window.localStorage['username'] = username;\n            vm.router.navigate(['/add-budget', username]);\n          }\n    });\n  }\n\n  calculateBudget(username, income, saving) {\n    let userBudgetRef = 'budgetHistory/' + username + '' + this.currentYear + '/' + this.currentMonth;\n    let budget = Math.abs(income - saving);\n    const spendPerDay = Math.floor(budget / this.leftDays());\n    database.ref(userBudgetRef).update({\n      totalIncome: income,\n      totalSaving: saving,\n      totalBudget: budget,\n      spendPerDay: spendPerDay,\n      updatedBudget: ''\n    });\n    window.localStorage['budgetRef'] = userBudgetRef;\n    let budgetRefYearly = 'budgetHistory/' + username + '' + this.currentYear;\n    window.localStorage['budgetRefYearly'] = budgetRefYearly;\n    this.router.navigate(['/today-budget', userBudgetRef]);\n  }\n\n  daysInMonth(month, year) {\n    return new Date(year, month, 0).getDate();\n  }\n\n  moneyToSpend(budgetRef) {\n    return database.ref(budgetRef).once('value');\n    // return new Observable((observer) => {\n    //     let d = database.ref(budgetRef).once('value')\n    //     observer.next(d);\n    // });\n  }\n\n  todaySpended(budgetRef, category, item, todaySpended, quantity) {\n    let date = new Date();\n    return database.ref(budgetRef + '/Days/' + date).set({\n      category: category, item: item, quantity: quantity, money: todaySpended});\n  }\n\n  updatedBudget(budgetRef, updatedBudget) {\n    const spendPerDay = Math.floor(updatedBudget / this.leftDays());\n    console.log('spend per days: ', spendPerDay);\n    database.ref(budgetRef).update({\n      updatedBudget: updatedBudget,\n      spendPerDay: spendPerDay\n    });\n  }\n\n  editIncome(username, newIncome, newSaving= 0, oldIncome) {\n    if (newIncome === oldIncome.totalIncome && newSaving === oldIncome.totalSaving) {\n       this.router.navigate(['/today-budget', this.budgetRef]);\n       return false;\n    }\n    let newBudget = Math.abs(newIncome - newSaving);\n    const updatedBudget = oldIncome.updatedBudget ?\n      oldIncome.totalBudget > newBudget ?\n      oldIncome.updatedBudget - Math.abs(newBudget - oldIncome.totalBudget)\n      : oldIncome.updatedBudget + Math.abs(newBudget - oldIncome.totalBudget) : '';\n      // : Math.abs(newBudget - oldIncome.totalBudget);\n    if (updatedBudget) {\n      const spendPerDay = Math.floor(updatedBudget / this.leftDays());\n      database.ref(this.budgetRef).update({\n        totalIncome: newIncome,\n        totalSaving: newSaving,\n        spendPerDay: spendPerDay,\n        totalBudget: newBudget,\n        updatedBudget: updatedBudget\n      });\n    }else {\n      database.ref(this.budgetRef).update({\n        totalIncome: newIncome,\n        totalSaving: newSaving,\n        spendPerDay: oldIncome.spendPerDay,\n        totalBudget: newBudget,\n        updatedBudget: oldIncome.updatedBudget\n      });\n    }\n    this.router.navigate(['/today-budget', this.budgetRef]);\n  }\n\n  cancelEdit() {\n    this.router.navigate(['/today-budget', this.budgetRef]);\n  }\n\n  getIncome() {\n    return new Promise((resolve, reject) => {\n        database.ref(this.budgetRef).once('value', function(snapshot) {\n          console.log('Income obj: ', snapshot.val());\n          snapshot.val() ? resolve(snapshot.val()) : reject('error in getting Income');\n        });\n    });\n  }\n\n  logout() {\n    window.localStorage.clear();\n    this.router.navigate(['/']);\n  }\n\n  leftDays() {\n    const date = new Date();\n    const totalDays = this.daysInMonth(date.getMonth() + 1, date.getFullYear());\n    return (totalDays - date.getDate());\n  }\n\n  getHistory() {\n      return database.ref(this.budgetRefYearly).once('value');\n  }\n\n  isLoggedIn() {\n        if (this.budgetRef) {\n          database.ref(this.budgetRefYearly + '/' + this.currentMonth).once('value', (snapshot) => {\n            snapshot.val() ? this.router.navigate(['/today-budget', this.budgetRef]) :\n            this.router.navigate(['/add-budget', this.username]);\n          });\n          return false;\n        }else {\n          return true;\n        }\n    }\n\n    get budgetRef() {\n      return window.localStorage['budgetRef'];\n    }\n\n    get budgetRefYearly() {\n      return window.localStorage['budgetRefYearly'];\n    }\n\n    get username(){\n      return window.localStorage['username'];\n    }\n\n    get currentMonth(){\n      const date = new Date();\n      return monthNames[date.getMonth()];\n    }\n\n    get currentYear(){\n      const date = new Date();\n      return date.getFullYear();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/hammad/Projects/my-budget/src/app/shared/main.service.ts"],"sourceRoot":""}